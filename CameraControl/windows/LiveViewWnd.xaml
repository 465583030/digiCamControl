<Controls:MetroWindow x:Class="CameraControl.windows.LiveViewWnd"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Title="{T:TranslateExtension LiveViewWindowTitle}" Height="804" Width="758" Loaded="Window_Loaded" Closed="Window_Closed" Closing="Window_Closing"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:local="clr-namespace:CameraControl.Controls"
                      xmlns:T="clr-namespace:CameraControl.Core.Translation;assembly=CameraControl.Core"
                      xmlns:Devices="clr-namespace:CameraControl.Devices;assembly=CameraControl.Devices"
                      xmlns:Classes="clr-namespace:CameraControl.Core.Classes;assembly=CameraControl.Core"
                      xmlns:ViewModel="clr-namespace:CameraControl.ViewModel"
                      mc:Ignorable="d" d:DataContext="{d:DesignInstance Type=Classes:LiveviewSettings}" Topmost="{Binding Path=StayOnTop, Mode=OneWay}"
                      ShowMinButton="False" PreviewKeyDown="MetroWindow_PreviewKeyDown"
                      SizeChanged="MetroWindow_SizeChanged">
    <Window.DataContext>
        <ViewModel:LiveViewViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />-->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CameraControl;component/Styles/Wpf.Toolkit.Extended.xaml" />
                <ResourceDictionary Source="../Resources/Icons.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Colors.xaml"/>-->
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Styles.xaml"/>-->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseDark.xaml" />-->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter1" />
        </ResourceDictionary>
    </Window.Resources>
    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button Content="{T:TranslateExtension ButtonHelp}" Name="btn_help" Click="btn_help_Click" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="140" />
            <RowDefinition Height="100" />
            <RowDefinition Height="46*" />
            <RowDefinition Height="303*" />
            <RowDefinition Height="20*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="464*" />
        </Grid.ColumnDefinitions>

        <Image Name="_image" Stretch="Uniform" Grid.Column="2" MouseDown="image1_MouseDown" Source="{Binding Bitmap}" Grid.RowSpan="4" Opacity="{Binding ElementName=slider_transparent,Path=Value}" RenderTransformOrigin="0.5,0.5" MouseWheel="_image_MouseWheel">
            <Image.RenderTransform>
                <RotateTransform Angle="{Binding ElementName=slider_rotation,Path=Value }"  />
            </Image.RenderTransform>
        </Image>

        <Controls:RangeSlider VerticalAlignment="Top" Grid.Column="2" Margin="4" Padding="20,0" Width="{Binding ElementName=_image, Path=ActualWidth}" Orientation="Horizontal" UpperValue="{Binding Path=HorizontalMax}"  LowerValue="{Binding Path=HorizontalMin}"  SmallChange="1" MinRangeWidth="0" Visibility="{Binding Path=ShowRuler, Converter={StaticResource BooleanToVisibilityConverter}}"/>

        <Controls:RangeSlider HorizontalAlignment="Left" Grid.Row="0" Grid.Column="2" Grid.RowSpan="4" Margin="4" Padding="0,40" Height="{Binding ElementName=_image, Path=ActualHeight}" Orientation="Vertical" UpperValue="{Binding Path=VerticalMax}"  LowerValue="{Binding Path= VerticalMin}"  SmallChange="1" MinRangeWidth="0" Visibility="{Binding Path=ShowRuler, Converter={StaticResource BooleanToVisibilityConverter}}"/>

        <Canvas Grid.Column="2" Background="{x:Null}" Grid.RowSpan="4" >
            <Label Canvas.Left="0" Canvas.Top="0" Content="REC" Height="41" FontSize="20" FontWeight="Bold" Foreground="Red" Width="52" Visibility="{Binding Recording, Converter={StaticResource BooleanToVisibilityConverter1}}"/>
        </Canvas>
        <StackPanel Grid.Column="2" VerticalAlignment="Bottom"  Grid.Row="3" IsEnabled="{Binding FocusingEnabled}" >
            <StackPanel Height="45" HorizontalAlignment="Center" Margin="0" Orientation="Horizontal" Background="#35000000">
                <ToggleButton Width="40" Margin="3" IsChecked="{Binding LockA}" Visibility="{Binding AdvancexFocusStacking, Converter={StaticResource BooleanToVisibilityConverter1}}" ToolTip="{T:TranslateExtension LabelLockNear}">
                    <ToggleButton.Resources>
                        <Rectangle Width="15" Height="15"  x:Key="OnImage">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_lock}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Width="15" Height="15"  x:Key="OffImage">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_unlock_keyhole}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </ToggleButton.Resources>
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource MetroCircleToggleButtonStyle}">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content" Value="{StaticResource OnImage}">
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content" Value="{StaticResource OffImage}">
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <Button Margin="1" Width="40" Content="|&lt;" Command="{Binding MoveACommand}" IsEnabled="{Binding LockA}" Style="{DynamicResource MetroCircleButtonStyle}" Visibility="{Binding AdvancexFocusStacking, Converter={StaticResource BooleanToVisibilityConverter1}}" ToolTip="{T:TranslateExtension LabelGoNear}"/>

                <Button Margin="1" Width="40" Content="&lt;&lt;&lt;" Command="{Binding FocusMMMCommand}" FontWeight="Bold" Style="{DynamicResource MetroCircleButtonStyle}" ToolTip="{T:TranslateExtension LabelMoveLargeToCamera}"/>
                <Button Margin="1" Width="40" Content="&lt;&lt;" Command="{Binding FocusMMCommand}" FontWeight="Bold" Style="{DynamicResource MetroCircleButtonStyle}" ToolTip="{T:TranslateExtension LabelMoveMediumToCamera}"/>
                <Button Margin="1" Width="40" Content="&lt;" Command="{Binding FocusMCommand}" FontWeight="Bold" Style="{DynamicResource MetroCircleButtonStyle}" ToolTip="{T:TranslateExtension LabelMoveSmallToCamera}"/>

                <Label Content="{Binding CounterMessage}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" ToolTip="{T:TranslateExtension LabelDistantFromPoints}"/>

                <Button Margin="1" Width="40" Content=">" Command="{Binding FocusPCommand}" FontWeight="Bold" Style="{DynamicResource MetroCircleButtonStyle}" ToolTip="{T:TranslateExtension LabelMoveSmallToInfinity}"/>
                <Button Margin="1" Width="40" Content=">>" Command="{Binding FocusPPCommand}" FontWeight="Bold" Style="{DynamicResource MetroCircleButtonStyle}" ToolTip="{T:TranslateExtension LabelMoveMediumToInfinity}"/>
                <Button Margin="1" Width="40" Content=">>>" Command="{Binding FocusPPPCommand}" FontWeight="Bold" Style="{DynamicResource MetroCircleButtonStyle}" ToolTip="{T:TranslateExtension LabelMoveLargeToInfinity}"/>

                <Button Margin="1" Width="40" Content=">|" Command="{Binding MoveBCommand}" IsEnabled="{Binding LockB}" Style="{DynamicResource MetroCircleButtonStyle}" Visibility="{Binding AdvancexFocusStacking, Converter={StaticResource BooleanToVisibilityConverter1}}" ToolTip="{T:TranslateExtension LabelGoFar}"/>


                <ToggleButton Width="40" Margin="3" IsChecked="{Binding LockB}" IsEnabled="{Binding LockA}" Visibility="{Binding AdvancexFocusStacking, Converter={StaticResource BooleanToVisibilityConverter1}}" ToolTip="{T:TranslateExtension LabelLockFar}">
                    <ToggleButton.Resources>
                        <Rectangle Width="15" Height="15"  x:Key="OnImage">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_lock}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Width="15" Height="15"  x:Key="OffImage">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_unlock_keyhole}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </ToggleButton.Resources>
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource MetroCircleToggleButtonStyle}" >
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content" Value="{StaticResource OnImage}">
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content" Value="{StaticResource OffImage}">
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <ToggleButton  ToolTip="{T:TranslateExtension LabelEdgeDetection}" Height="40" Width="40" Margin="0" IsChecked="{Binding EdgeDetection}" Style="{DynamicResource MetroCircleToggleButtonStyle}" >
                    <Rectangle Width="20" Height="20">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_contrast}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </ToggleButton>
            </StackPanel>
            <Slider Maximum="{Binding FocusValue}" IsEnabled="{Binding LockB}" Value="{Binding SelectedFocusValue, UpdateSourceTrigger=PropertyChanged}" AutoToolTipPlacement="BottomRight" TickFrequency="{Binding FocusStep}" Width="475" Visibility="{Binding AdvancexFocusStacking, Converter={StaticResource BooleanToVisibilityConverter1}}" TickPlacement="BottomRight" SmallChange="10" LargeChange="100" IsMoveToPointEnabled="True" />
        </StackPanel>
        <Button Content="{T:TranslateExtension ButtonAutoFocus}" Height="30" HorizontalAlignment="Left" Margin="12,12,0,0" VerticalAlignment="Top" Width="112" Command="{Binding AutoFocusCommand}" />

        <Button Grid.Row="0" Grid.Column="0" Content="{T:TranslateExtension ButtonCapture}" Height="30" Margin="0,12,9,0" Command="{Binding CaptureCommand}" VerticalAlignment="Top" HorizontalAlignment="Right" Width="101" IsEnabled="{Binding IsFree}"/>

        <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="2" Grid.RowSpan="2">
            <StackPanel>
                <StackPanel.ScrollOwner>
                    <ScrollViewer />
                </StackPanel.ScrollOwner>
                <Expander Header="{T:TranslateExtension LabelFocusStackingAdvanced}" BorderThickness="1" BorderBrush="Black" Margin="3" Visibility="{Binding AdvancexFocusStacking, Converter={StaticResource BooleanToVisibilityConverter1}}">
                    <Expander.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Button Content="{T:TranslateExtension ButtonStart}" Command="{Binding StartFocusStackingCommand}" IsEnabled="{Binding IsFree}" Grid.Row="3"  Margin="5"/>
                            <Button Content="{T:TranslateExtension ButtonPreview}" Command="{Binding PreviewFocusStackingCommand}" IsEnabled="{Binding IsFree}" Grid.Row="3" Grid.Column="1" Margin="5"/>
                            <Button Content="{T:TranslateExtension ButtonStop}" Command="{Binding StopFocusStackingCommand}" Grid.Column="1" IsEnabled="{Binding IsFocusStackingRunning}" Grid.Row="4" Margin="5"/>

                            <Label Grid.Row="0" Grid.Column="0" Content="{T:TranslateExtension LabelNoOfPhots}"/>
                            <Controls:NumericUpDown Grid.Row="0" Grid.Column="1" Minimum="1" Value="{Binding PhotoNo}" IsEnabled="{Binding IsFree}" Margin="2"/>

                            <!--<Controls1:AdvancedSlider Minimum="1" Maximum="100" Label="{T:TranslateExtension LabelNoOfPhots}" Grid.ColumnSpan="4" Value="{Binding PhotoNo}" IsEnabled="{Binding IsFree}" />-->

                            <Label Grid.Row="1" Grid.Column="0" Content="{T:TranslateExtension LabelFocusStep}"/>
                            <Controls:NumericUpDown Grid.Row="1" Grid.Column="1" Minimum="1" Value="{Binding FocusStep}" IsEnabled="{Binding IsFree}" Margin="2"/>

                            <!--<Controls1:AdvancedSlider Minimum="1" Maximum="1024" Label="{T:TranslateExtension LabelFocusStep}" Grid.ColumnSpan="4" Value="{Binding FocusStep}" IsEnabled="{Binding IsFree}" Grid.Row="1" />-->
                            <ProgressBar  Grid.Row="5" Margin="5" Value="{Binding FocusStackingTick}" Maximum="{Binding WaitTime}" VerticalAlignment="Bottom"/>
                            <Label Content="{Binding PhotoCount}" Grid.Row="4" Margin="5"/>

                            <Label Grid.Row="2" Grid.Column="0" Content="{T:TranslateExtension LabelWaitTime}"/>
                            <Controls:NumericUpDown Grid.Row="2" Grid.Column="1" Minimum="2" Value="{Binding WaitTime}" IsEnabled="{Binding IsFree}" Margin="2"/>

                            <Button Grid.Row="5" Grid.Column="1" ToolTip="{T:TranslateExtension SessionAdd}" Height="25" Width="25" Margin="0" Style="{DynamicResource MetroCircleButtonStyle}" HorizontalAlignment="Right" Command="{Binding HelpFocusStackingCommand}">
                                <Rectangle Width="10" Height="10">
                                    <Rectangle.Fill>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_question}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Button>
                        </Grid>
                    </Expander.Content>
                </Expander>
                <Expander Header="{T:TranslateExtension LabelFocusStackingSimple}" BorderThickness="1" BorderBrush="Black" Margin="3" >
                    <Expander.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Button Content="{T:TranslateExtension ButtonStart}" Command="{Binding StartSimpleFocusStackingCommand}" IsEnabled="{Binding IsFree}" Grid.Row="4"  Margin="5"/>
                            <Button Content="{T:TranslateExtension ButtonPreview}" Command="{Binding PreviewSimpleFocusStackingCommand}" IsEnabled="{Binding IsFree}" Grid.Row="4" Grid.Column="1" Margin="5"/>
                            <Button Content="{T:TranslateExtension ButtonStop}" Command="{Binding StopSimpleFocusStackingCommand}" Grid.Column="1" IsEnabled="{Binding IsFocusStackingRunning}" Grid.Row="5" Margin="5"/>

                            <Label Grid.Row="0" Grid.Column="0" Content="{T:TranslateExtension LabelNoOfPhots}"/>
                            <Controls:NumericUpDown Grid.Row="0" Grid.Column="1" Minimum="1" Value="{Binding PhotoNumber}" IsEnabled="{Binding IsFree}" Margin="2"/>

                            <!--<Controls1:AdvancedSlider Minimum="1" Maximum="100" Label="{T:TranslateExtension LabelNoOfPhots}" Grid.ColumnSpan="4" Value="{Binding PhotoNo}" IsEnabled="{Binding IsFree}" />-->

                            <Label Grid.Row="1" Grid.Column="0" Content="{T:TranslateExtension LabelDirection}"/>
                            <ComboBox Grid.Row="1" Grid.Column="1"  SelectedIndex="{Binding Direction}" IsEnabled="{Binding IsFree}" Margin="2">
                                <ComboBoxItem Content="{T:TranslateExtension LabelFarNear}" />
                                <ComboBoxItem Content="{T:TranslateExtension LabelNearFar}" />
                            </ComboBox>

                            <Label Grid.Row="2" Grid.Column="0" Content="{T:TranslateExtension LabelFocusStep}"/>
                            <ComboBox Grid.Row="2" Grid.Column="1"  SelectedIndex="{Binding FocusStepSize}" IsEnabled="{Binding IsFree}" Margin="2">
                                <ComboBoxItem Content="{T:TranslateExtension LabelStepSmall}" />
                                <ComboBoxItem Content="{T:TranslateExtension LabelStepMedium}" />
                                <ComboBoxItem Content="{T:TranslateExtension LabelStepLarge}" />
                            </ComboBox>
                            <!--<Controls1:AdvancedSlider Minimum="1" Maximum="1024" Label="{T:TranslateExtension LabelFocusStep}" Grid.ColumnSpan="4" Value="{Binding FocusStep}" IsEnabled="{Binding IsFree}" Grid.Row="1" />-->

                            <ProgressBar  Grid.Row="5" Margin="5" Value="{Binding FocusStackingTick}" Maximum="{Binding WaitTime}" VerticalAlignment="Bottom"/>
                            <Label Content="{Binding PhotoCount}" Grid.Row="5" Margin="5"/>

                            <Label Grid.Row="3" Grid.Column="0" Content="{T:TranslateExtension LabelWaitTime}"/>
                            <Controls:NumericUpDown Grid.Row="3" Grid.Column="1" Minimum="2" Value="{Binding WaitTime}" IsEnabled="{Binding IsFree}" Margin="2"/>
                        </Grid>
                    </Expander.Content>
                </Expander>
                <Expander Header="{T:TranslateExtension LabelControl}" IsEnabled="{Binding IsFree}" BorderThickness="1"  BorderBrush="Black" Margin="3">
                    <StackPanel>
                        <Label Content="{T:TranslateExtension LabelCaptureDelay}" Margin="20,0"/>
                        <Controls:NumericUpDown Minimum="0" Value="{Binding CaptureDelay}" IsEnabled="{Binding IsFree}" Margin="20,3"/>
                        <local:LiveViewControlerSimple DataContext="{Binding Path=CameraDevice}" Margin="20,3"/>
                    </StackPanel>
                </Expander>
                <Expander Header="{T:TranslateExtension LabelDisplay}" BorderThickness="1"  BorderBrush="Black" Margin="3">
                    <Expander.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="88*" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="90*" />
                                <ColumnDefinition Width="5"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Label Content="{T:TranslateExtension LabelGrid}" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            <ComboBox Grid.Row="0" Grid.Column="3" Margin="3" SelectedIndex="{Binding GridType}" ItemsSource="{Binding Grids}"/>

                            <ComboBox IsEnabled="{Binding Path=CameraDevice.LiveViewImageZoomRatio.IsEnabled}" ItemsSource="{Binding Path=CameraDevice.LiveViewImageZoomRatio.Values}" Grid.Row="1" Grid.Column="3" Margin="3" SelectedItem="{Binding CameraDevice.LiveViewImageZoomRatio.Value}"/>
                            <Label Content="{T:TranslateExtension LabelLvZoomRation}" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" />

                            <Label Content="{T:TranslateExtension LabelBrightness}" Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="3" />
                            <Slider Maximum="255" Minimum="-255" Value="{Binding Brightness}" Grid.Row="5" Grid.ColumnSpan="3" Grid.Column="1" TickFrequency="255" TickPlacement="BottomRight">
                                <Slider.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{T:TranslateExtension LabelReset}" Command="{Binding Path=ResetBrigthnessCommand}" />
                                    </ContextMenu>
                                </Slider.ContextMenu>
                            </Slider>
                            <CheckBox Content="B&amp;W" IsChecked="{Binding BlackAndWhite}" Grid.Row="6" Grid.Column="1" VerticalAlignment="Center" Margin="2"/>
                            <!--<CheckBox Content="{T:TranslateExtension LabelStayOnTop}" IsChecked="{Binding Path=StayOnTop}" Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="3" Margin="2"/>-->
                            <CheckBox Content="{T:TranslateExtension LabelShowFocusRect}" IsChecked="{Binding Path=ShowFocusRect}" Grid.Row="8" Grid.Column="1" Grid.ColumnSpan="3" Margin="2"/>
                            <CheckBox Content="{T:TranslateExtension LabelShowRuler}" IsChecked="{Binding Path=ShowRuler}" Grid.Row="9" Grid.Column="1" Grid.ColumnSpan="3" Margin="2"/>

                            <Label Content="{T:TranslateExtension LabelLiveViewRotation}" Grid.Column="1" Grid.Row="10" Grid.ColumnSpan="3" />
                            <ComboBox SelectedIndex="{Binding RotationIndex}" Grid.Row="11" Grid.ColumnSpan="3" Grid.Column="1">
                                <ComboBoxItem Content="{T:TranslateExtension LabelRotateNone}" />
                                <ComboBoxItem Content="{T:TranslateExtension LabelRotate90}" />
                                <ComboBoxItem Content="{T:TranslateExtension LabelRotate180}" />
                                <ComboBoxItem Content="{T:TranslateExtension LabelRotate270}" />
                                <ComboBoxItem Content="{T:TranslateExtension LabelAutoRotate}" />
                            </ComboBox>

                        </Grid>
                    </Expander.Content>
                </Expander>
                <Expander Header="{T:TranslateExtension LabelOverlay}" BorderThickness="1"  BorderBrush="Black" Margin="3">
                    <Expander.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            
                            <ComboBox Margin="2"  SelectedValue ="{Binding SelectedOverlay}" SelectedValuePath="Value" DisplayMemberPath="Name" ItemsSource="{Binding Overlays}"/>
                            <Button Grid.Row="0" Grid.Column="1" Content="..." Margin="2" Command="{Binding BrowseOverlayCommand}"/>

                            <StackPanel Grid.Row="1" Grid.Column="0" Margin="2" Orientation="Vertical">
                                <CheckBox  Content="{T:TranslateExtension LabelActivate}" HorizontalContentAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding OverlayActivated}" />
                                <CheckBox  Content="{T:TranslateExtension LabelOverlayUseLastCaptured}" HorizontalContentAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding OverlayUseLastCaptured}" IsEnabled="{Binding OverlayActivated}"/>
                            </StackPanel>

                            <Label Grid.Row="2" Grid.Column="0" Margin="2" Content="{T:TranslateExtension LabelScaling}" Grid.ColumnSpan="2" Padding="1"/>
                            <Slider Grid.Row="3" Grid.Column="0" Margin="2" Minimum="-100" Maximum="100" Value="{Binding OverlayScale}" IsSelectionRangeEnabled="False" TickPlacement="BottomRight" TickFrequency="100" Grid.ColumnSpan="2" IsEnabled="{Binding OverlayActivated}"/>

                            <Label Grid.Row="4" Grid.Column="0" Margin="2" Content="{T:TranslateExtension LabelHorizontal}" Grid.ColumnSpan="2" Padding="1"/>
                            <Slider Grid.Row="5" Grid.Column="0" Margin="2" Minimum="-100" Maximum="100" Value="{Binding OverlayHorizontal}" IsSelectionRangeEnabled="False" TickPlacement="BottomRight" TickFrequency="100" Grid.ColumnSpan="2" IsEnabled="{Binding OverlayActivated}" />

                            <Label Grid.Row="6" Grid.Column="0" Margin="2" Content="{T:TranslateExtension LabelVertical}" Grid.ColumnSpan="2" Padding="1"/>
                            <Slider Grid.Row="7" Grid.Column="0" Margin="2" Minimum="-100" Maximum="100" Value="{Binding OverlayVertical}" IsSelectionRangeEnabled="False" TickPlacement="BottomRight" TickFrequency="100" Grid.ColumnSpan="2" IsEnabled="{Binding OverlayActivated}"/>

                            <Label Grid.Row="8" Grid.Column="0" Margin="2" Content="{T:TranslateExtension LabelOverlayTransparency}" Grid.ColumnSpan="2" Padding="1"/>
                            <Slider Grid.Row="9" Grid.Column="0" Margin="2" Minimum="0" Maximum="100" Value="{Binding OverlayTransparency}" IsSelectionRangeEnabled="False" TickPlacement="BottomRight" TickFrequency="10" Grid.ColumnSpan="2" IsEnabled="{Binding OverlayActivated}"/>
                            <Button Grid.Column="1" Grid.Row="1" Style="{DynamicResource MetroCircleButtonStyle}" ToolTip="{T:TranslateExtension LabelReset}" Command="{Binding ResetOverlayCommand}">
                                <Rectangle Width="20" Height="20">
                                    <Rectangle.Fill>
                                        <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_reset}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Button>
                            
                        </Grid>
                    </Expander.Content>
                </Expander>
                <Expander Header="{T:TranslateExtension LabelLuminosity}" BorderThickness="1"  BorderBrush="Black"  Margin="3" IsExpanded="{Binding ShowHistogram}">
                    <Expander.Content>
                        <Grid Height="75" >
                            <Polygon Points="{Binding Path=LuminanceHistogramPoints}" Stretch="Fill" Fill="LightGray" Opacity="1" Visibility="{Binding ElementName=TgGray, Path=IsChecked,  Converter={StaticResource BooleanToVisibilityConverter1}}"/>
                            <Polygon Points="{Binding Path=RedColorHistogramPoints}" Stretch="Fill" Fill="Red" Opacity="0.5" Visibility="{Binding ElementName=TgRed, Path=IsChecked,  Converter={StaticResource BooleanToVisibilityConverter1}}" />
                            <Polygon Points="{Binding Path=GreenColorHistogramPoints}" Stretch="Fill" Fill="Green" Opacity="0.5" Visibility="{Binding ElementName=TgGreen, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter1}}"/>
                            <Polygon Points="{Binding Path=BlueColorHistogramPoints}" Stretch="Fill" Fill="Blue" Opacity="0.5" Visibility="{Binding ElementName=TgBlue, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter1}}"/>
                            <StackPanel Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Center" Orientation="Horizontal">
                                <ToggleButton  Height="25" Width="25" Margin="0" Style="{DynamicResource MetroCircleToggleButtonStyle}" IsChecked="True" Name="TgRed">
                                    <Ellipse Height="10" Width="10" Fill="Red"/>
                                </ToggleButton>
                                <ToggleButton  Height="25" Width="25" Margin="0" Style="{DynamicResource MetroCircleToggleButtonStyle}" IsChecked="True" Name="TgGreen">
                                    <Ellipse Height="10" Width="10" Fill="Green"/>
                                </ToggleButton>
                                <ToggleButton  Height="25" Width="25" Margin="0" Style="{DynamicResource MetroCircleToggleButtonStyle}" IsChecked="True" Name="TgBlue">
                                    <Ellipse Height="10" Width="10" Fill="Blue"/>
                                </ToggleButton>
                                <ToggleButton  Height="25" Width="25" Margin="0" Style="{DynamicResource MetroCircleToggleButtonStyle}" IsChecked="False" Name="TgGray">
                                    <Ellipse Height="10" Width="10" Fill="Gray"/>
                                </ToggleButton>
                            </StackPanel>
                            <CheckBox IsChecked="{Binding HighlightUnderExp}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="18"/>
                            <CheckBox VerticalAlignment="Top" HorizontalAlignment="Right" Width="18" IsChecked="{Binding HighlightOverExp}"/>
                        </Grid>
                    </Expander.Content>
                </Expander>
                <Expander Header="{T:TranslateExtension LabelMotionDetection}" BorderThickness="1"  BorderBrush="Black"  Margin="3">
                    <Expander.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="88*" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="90*" />
                                <ColumnDefinition Width="5" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="186*" />
                            </Grid.RowDefinitions>
                            <CheckBox Content="{T:TranslateExtension LabelActivateMotionDetection}" Grid.Column="1" IsChecked="{Binding DetectMotion}" Grid.ColumnSpan="3" Margin="3" VerticalAlignment="Center"/>
                            <CheckBox Content="{T:TranslateExtension LabelCaptureWhenMove}" Grid.Column="1" Grid.Row="2" IsChecked="{Binding TriggerOnMotion}" Grid.ColumnSpan="3" Margin="3"  VerticalAlignment="Center"/>
                            <CheckBox Content="{T:TranslateExtension LabelAutofocusBeforeCapture}" Grid.Column="1" Grid.Row="1" IsChecked="{Binding MotionAutofocusBeforCapture}" Grid.ColumnSpan="3" Margin="3"  VerticalAlignment="Center"/>

                            <Label Content="{T:TranslateExtension LabelThreshold}" Grid.Column="1" Grid.Row="3" />
                            <Controls:NumericUpDown Grid.Column="3" Grid.Row="3" Maximum="99" Minimum="1" Value="{Binding MotionThreshold}" Margin="3"/>
                            <Label Content="{T:TranslateExtension LabelWaitMoion}" Grid.Column="1" Grid.Row="4" />
                            <Controls:NumericUpDown Grid.Column="3" Grid.Row="4" Margin="3" Minimum="1" Maximum="3600" Value="{Binding WaitForMotionSec}"/>
                            <Label Grid.Column="3" Grid.Row="5" Content="{Binding CurrentMotionIndex}" />
                        </Grid>
                    </Expander.Content>
                </Expander>
            </StackPanel>
        </ScrollViewer>
        <ToggleButton Content="{T:TranslateExtension ButtonFreezeImage}" Height="30" Margin="12,88,9,0" VerticalAlignment="Top" IsChecked="{Binding FreezeImage}" Checked="ToggleButton_Checked" />
        <Button Content="{Binding RecButtonText}" Height="30" Margin="12,51,9,0" Command="{Binding RecordMovieCommand}" VerticalAlignment="Top" IsEnabled="{Binding IsFree}"/>
        <Image Height="100" Margin="12,0,0,0" VerticalAlignment="Top" Source="{Binding Preview}" Name="_previeImage" MouseDown="canvas_image_MouseDown" HorizontalAlignment="Left" Width="150" Stretch="Uniform" Grid.Row="1">
            <!--<Controls:ProgressRing IsActive="{Binding Path=SelectedPortableDevice.IsBusy, RelativeSource={RelativeSource FindAncestor, AncestorType=my:LiveViewWnd, AncestorLevel=1}}" Height="78" Width="81" Canvas.Left="21" Canvas.Top="20" />-->
        </Image>
        <!--<Image Name="img_preview" Margin="31,114,0,0" Height="{Binding ElementName=canvas_image, Path=Height}" HorizontalAlignment="Left" Width="{Binding ElementName=canvas_image, Path=Width}"/>-->
        <Label Content="{Binding Fps}" Margin="0,8,9,0" Grid.Row="1" HorizontalAlignment="Right" Width="53" Height="54" VerticalAlignment="Top" />

        <Grid Width="300" Grid.Column="2" Grid.Row="2" Name="grid_wait" Visibility="{Binding Path=DelayedStart, Converter={StaticResource BooleanToVisibilityConverter1}, ConverterParameter=false}">
            <ProgressBar IsIndeterminate="True" Height="20"/>
            <Label Content="{T:TranslateExtension LabelWaitingForDevice}" HorizontalContentAlignment="Center" Height="67" VerticalAlignment="Center" />
        </Grid>

        <Label Grid.Row="0" Grid.Column="2" Grid.RowSpan="4" Content="{Binding CountDown}" FontSize="155" Padding="0" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="{Binding Path=CountDownVisible, Converter={StaticResource BooleanToVisibilityConverter1}, ConverterParameter=false}" Foreground="#82000000" />
        
        <Label Content="{Binding Source={x:Static Member=Devices:StaticHelper.Instance}, Path=SystemMessage}" FontWeight="Bold" HorizontalContentAlignment="Right" Grid.Row="4" Grid.Column="1" Padding="0" Grid.ColumnSpan="3" />
        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Grid.RowSpan="5" />
    </Grid>
</Controls:MetroWindow>
