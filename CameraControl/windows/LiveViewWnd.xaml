<Controls:MetroWindow x:Class="CameraControl.windows.LiveViewWnd"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Title="{T:TranslateExtension LiveViewWindowTitle}" Height="804" Width="758" Loaded="Window_Loaded" Closed="Window_Closed" Closing="Window_Closing" xmlns:my="clr-namespace:CameraControl.windows"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:Core="clr-namespace:CameraControl.Core;assembly=CameraControl.Core"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:local="clr-namespace:CameraControl.Controls"
                      xmlns:T="clr-namespace:CameraControl.Core.Translation;assembly=CameraControl.Core"
                      xmlns:Devices="clr-namespace:CameraControl.Devices;assembly=CameraControl.Devices"
                      xmlns:Controls1="clr-namespace:CameraControl.Controls;assembly=CameraControl.Core"
                      xmlns:Classes="clr-namespace:CameraControl.Core.Classes;assembly=CameraControl.Core"
                      xmlns:ClassesWpf="clr-namespace:CameraControl.Core.Wpf;assembly=CameraControl.Core"
                      xmlns:ViewModel="clr-namespace:CameraControl.ViewModel"
                      mc:Ignorable="d" d:DataContext="{d:DesignInstance Type=Classes:LiveviewSettings}" Topmost="{Binding ElementName=chk_top,Path=IsChecked}"
                      ShowMinButton="False" PreviewKeyDown="MetroWindow_PreviewKeyDown"
                      SizeChanged="MetroWindow_SizeChanged">
    <Window.DataContext>
        <ViewModel:LiveViewViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />-->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CameraControl;component/Styles/Wpf.Toolkit.Extended.xaml" />
                <ResourceDictionary Source="../Resources/Icons.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Colors.xaml"/>-->
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/VS/Styles.xaml"/>-->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseDark.xaml" />-->
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />-->
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter1" />
        </ResourceDictionary>
    </Window.Resources>
    <Controls:MetroWindow.WindowCommands>
        <Controls:WindowCommands>
            <Button Content="{T:TranslateExtension ButtonHelp}" Name="btn_help" Click="btn_help_Click" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.WindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="18" />
            <RowDefinition Height="206" />
            <RowDefinition Height="46*" />
            <RowDefinition Height="303*" />
            <RowDefinition Height="20*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="464*" />
        </Grid.ColumnDefinitions>
        <Image Stretch="Uniform" Grid.Column="2" Source="{Binding Source={x:Static Member=Core:ServiceProvider.Settings}, Path=SelectedBitmap.DisplayImage}"  Grid.RowSpan="4" Name="img_preview" Grid.ColumnSpan="2" />

        <Image Name="_image" Stretch="Uniform" Grid.Column="2" MouseDown="image1_MouseDown" Source="{Binding Bitmap}" Grid.Row="0" Grid.RowSpan="4" Opacity="{Binding ElementName=slider_transparent,Path=Value}" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <RotateTransform Angle="{Binding ElementName=slider_rotation,Path=Value }"  />
            </Image.RenderTransform>
        </Image>

        <!--<Controls:RangeSlider Grid.Column="2" Margin="4" Grid.ColumnSpan="2" Name="slide_horiz" UpperValue="{Binding Path=GridHorizontalMax}"  LowerValue="{Binding Path=GridHorizontalMin}" SmallChange="1" MinRangeWidth="0" Visibility="{Binding Path=GridVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <Controls:RangeSlider Grid.Row="1" Grid.Column="3" Grid.RowSpan="3" Margin="4" Orientation="Vertical" UpperValue="{Binding Path=GridVerticalMin}"  LowerValue="{Binding Path=GridVerticalMax}"  Name="slide_vert" SmallChange="1" MinRangeWidth="0" Visibility="{Binding Path=GridVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>

        <Line Grid.Row="1" Grid.Column="2" Grid.RowSpan="3" Y1="0" X1="{Binding Path=GridHorizontalMinSize}" Y2="{Binding ElementName=slide_vert, Path=ActualHeight}" X2="{Binding Path=GridHorizontalMinSize}" StrokeThickness="1" Stroke="Black" Visibility="{Binding Path=GridVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <Line Grid.Row="1" Grid.Column="2" Grid.RowSpan="3" Y1="0" X1="{Binding Path=GridHorizontalMaxSize}" Y2="{Binding ElementName=slide_vert, Path=ActualHeight}" X2="{Binding Path=GridHorizontalMaxSize}" StrokeThickness="1" Stroke="Black" Visibility="{Binding Path=GridVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>

        <Line Grid.Row="1" Grid.Column="2" Grid.RowSpan="3" X1="0" Y1="{Binding Path=GridVerticalMinSize}" X2="{Binding ElementName=slide_horiz, Path=ActualWidth}" Y2="{Binding Path=GridVerticalMinSize}" StrokeThickness="1" Stroke="Black" Visibility="{Binding Path=GridVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <Line Grid.Row="1" Grid.Column="2" Grid.RowSpan="3" X1="0" Y1="{Binding Path=GridVerticalMaxSize}" X2="{Binding ElementName=slide_horiz, Path=ActualWidth}" Y2="{Binding Path=GridVerticalMaxSize}" StrokeThickness="1" Stroke="Black" Visibility="{Binding Path=GridVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->


        <Canvas Grid.Column="2" Background="{x:Null}" Grid.RowSpan="4" >
            <Label Canvas.Left="0" Canvas.Top="0" Content="REC" Height="41" FontSize="20" FontWeight="Bold" Foreground="Red" Width="52" Visibility="{Binding Recording, Converter={StaticResource BooleanToVisibilityConverter1}}"/>
        </Canvas>
        <StackPanel Grid.Column="2" VerticalAlignment="Bottom"  Grid.Row="3" IsEnabled="{Binding FocusingEnabled}">
            <StackPanel Height="45" HorizontalAlignment="Center" Margin="0" Orientation="Horizontal" Background="#35000000">
                <ToggleButton Width="40" Margin="3" IsChecked="{Binding LockA}">
                    <ToggleButton.Resources>
                        <Rectangle Width="15" Height="15"  x:Key="OnImage">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_lock}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Width="15" Height="15"  x:Key="OffImage">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_unlock_keyhole}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </ToggleButton.Resources>
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource MetroCircleToggleButtonStyle}">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content" Value="{StaticResource OnImage}">
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content" Value="{StaticResource OffImage}">
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <Button Margin="1" Width="40" Content="|&lt;" Command="{Binding MoveACommand}" IsEnabled="{Binding LockA}" Style="{DynamicResource MetroCircleButtonStyle}"/>

                <Button Margin="1" Width="40" Content="&lt;&lt;&lt;" Command="{Binding FocusMMMCommand}" FontWeight="Bold" ToolTip="-500" Style="{DynamicResource MetroCircleButtonStyle}"/>
                <Button Margin="1" Width="40" Content="&lt;&lt;" Command="{Binding FocusMMCommand}" FontWeight="Bold" ToolTip="-100" Style="{DynamicResource MetroCircleButtonStyle}"/>
                <Button Margin="1" Width="40" Content="&lt;" Command="{Binding FocusMCommand}" FontWeight="Bold" ToolTip="-10" Style="{DynamicResource MetroCircleButtonStyle}"/>
                
                <Label Content="{Binding CounterMessage}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                
                <Button Margin="1" Width="40" Content=">" Command="{Binding FocusPCommand}" FontWeight="Bold" ToolTip="10" Style="{DynamicResource MetroCircleButtonStyle}"/>
                <Button Margin="1" Width="40" Content=">>" Command="{Binding FocusPPCommand}" FontWeight="Bold" ToolTip="100" Style="{DynamicResource MetroCircleButtonStyle}"/>
                <Button Margin="1" Width="40" Content=">>>" Command="{Binding FocusPPPCommand}" FontWeight="Bold" ToolTip="500" Style="{DynamicResource MetroCircleButtonStyle}"/>

                <Button Margin="1" Width="40" Content=">|" Command="{Binding MoveBCommand}" IsEnabled="{Binding LockB}" Style="{DynamicResource MetroCircleButtonStyle}"/>


                <ToggleButton Width="40" Margin="3" IsChecked="{Binding LockB}" IsEnabled="{Binding LockA}">
                    <ToggleButton.Resources>
                        <Rectangle Width="15" Height="15"  x:Key="OnImage">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_lock}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Width="15" Height="15"  x:Key="OffImage">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_unlock_keyhole}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </ToggleButton.Resources>
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource MetroCircleToggleButtonStyle}" >
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content" Value="{StaticResource OnImage}">
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content" Value="{StaticResource OffImage}">
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <ToggleButton  ToolTip="{T:TranslateExtension LabelEdgeDetection}" Height="40" Width="40" Margin="0" IsChecked="{Binding EdgeDetection}" Style="{DynamicResource MetroCircleToggleButtonStyle}" >
                    <Rectangle Width="20" Height="20">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_contrast}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </ToggleButton>
            </StackPanel>
            <Slider Maximum="{Binding FocusValue}" IsEnabled="{Binding LockB}" ValueChanged="Slider_ValueChanged" AutoToolTipPlacement="BottomRight" TickFrequency="50" Width="462" />
        </StackPanel>
        <Button Content="{T:TranslateExtension ButtonAutoFocus}" Height="23" HorizontalAlignment="Left" Margin="12,12,0,0" VerticalAlignment="Top" Width="112" Command="{Binding AutoFocusCommand}"
                Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" />
        
        <Button Content="{T:TranslateExtension ButtonCapture}" Height="23" Margin="0,12,9,0" Command="{Binding CaptureCommand}" VerticalAlignment="Top" HorizontalAlignment="Right" Width="101"
              Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" />
        
        <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Row="2" Grid.RowSpan="2">
            <StackPanel>
                <StackPanel.ScrollOwner>
                    <ScrollViewer />
                </StackPanel.ScrollOwner>
                <Expander Header="{T:TranslateExtension LabelFocusStacking}" BorderThickness="1" BorderBrush="Black" Margin="3">
                    <Expander.Content>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50" />
                                <RowDefinition Height="50" />
                                <RowDefinition Height="50" />
                                <RowDefinition Height="40" />
                                <RowDefinition Height="38" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="86" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="86*" />
                                <ColumnDefinition Width="5" />
                            </Grid.ColumnDefinitions>
                            <Button Content="{T:TranslateExtension ButtonStart}" Command="{Binding StartFocusStackingCommand}" IsEnabled="{Binding IsFree}" Grid.Row="3" Grid.ColumnSpan="2" Margin="5"/>
                            <Button Content="{T:TranslateExtension ButtonPreview}" Command="{Binding PreviewFocusStackingCommand}" IsEnabled="{Binding IsFree}" Grid.Row="3" Grid.Column="2" Margin="5"/>
                            <Button Content="{T:TranslateExtension ButtonStop}" Command="{Binding StopFocusStackingCommand}" Grid.Column="2" IsEnabled="{Binding IsBusy}" Grid.Row="4" Margin="5"/>

                            <Controls1:AdvancedSlider Minimum="1" Maximum="100" Label="{T:TranslateExtension LabelNoOfPhots}" Grid.ColumnSpan="4" Value="{Binding PhotoNo}" IsEnabled="{Binding IsFree}" />

                            <Controls1:AdvancedSlider Minimum="1" Maximum="1024" Label="{T:TranslateExtension LabelFocusStep}" Grid.ColumnSpan="4" Value="{Binding FocusStep}" IsEnabled="{Binding IsFree}" Grid.Row="1" />

                            <Label Content="{Binding PhotoCount}" Height="28" HorizontalAlignment="Left" Margin="5,7,0,0" VerticalAlignment="Top" Width="75" Grid.Row="4" />

                            <Controls1:AdvancedSlider Minimum="2" Maximum="60" Label="{T:TranslateExtension LabelWaitTime}" Grid.ColumnSpan="4" Value="{Binding WaitTime}" IsEnabled="{Binding IsFree}" Grid.Row="2" />
                        </Grid>
                    </Expander.Content>
                </Expander>
                <Expander Header="{T:TranslateExtension LabelControl}" IsEnabled="{Binding IsFree}" BorderThickness="1"  BorderBrush="Black" Margin="3">
                    <Expander.Content>
                        <local:ControlerSimple Width="150" DataContext="{Binding Path=CameraDevice}" Margin="3"/>
                    </Expander.Content>
                </Expander>
                <Expander Header="{T:TranslateExtension LabelDisplay}" BorderThickness="1"  BorderBrush="Black" Margin="3">
                    <Expander.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="88*" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="90*" />
                                <ColumnDefinition Width="5"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Label Content="{T:TranslateExtension LabelOverlay}" Grid.Column="1" VerticalAlignment="Center"/>
                            <ComboBox Grid.Column="3" Margin="3" SelectedIndex="{Binding GridType}" ItemsSource="{Binding Overlays}" SelectedItem="{Binding SelectedOverlay}"/>

                            <ComboBox IsEnabled="{Binding Path=CameraDevice.LiveViewImageZoomRatio.IsEnabled}" ItemsSource="{Binding Path=CameraDevice.LiveViewImageZoomRatio.Values}" Grid.Row="1" Grid.Column="3" Margin="3"/>
                            <Label Content="{T:TranslateExtension LabelLvZoomRation}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" />
                            <Label Content="{T:TranslateExtension LabelOpacity}" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3" />
                            <Slider Name="slider_transparent" Maximum="1" Value="1" Grid.Row="3" Grid.ColumnSpan="3" Grid.Column="1" ValueChanged="slider_transparent_ValueChanged" />

                            <CheckBox Content="B&amp;W" IsChecked="{Binding BlackAndWhite}" Grid.Row="4" Grid.Column="1" VerticalAlignment="Center" Margin="2"/>
                            <CheckBox Content="{T:TranslateExtension LabelStayOnTop}" Name="chk_top" Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="3" Margin="2"/>
                            <CheckBox Content="{T:TranslateExtension LabelShowFocusRect}" IsChecked="{Binding Path=ShowFocusRect}" Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="3" Margin="2"/>
                            <CheckBox Content="{T:TranslateExtension LabelShowRuler}" IsChecked="{Binding Path=GridVisible}" Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="3" Margin="2"/>

                            <Label Content="{T:TranslateExtension LabelLiveViewRotation}" Grid.Column="1" Grid.Row="8" Grid.ColumnSpan="3" />
                            <ComboBox SelectedIndex="{Binding RotationIndex}" Grid.Row="9" Grid.ColumnSpan="3" Grid.Column="1">
                                <ComboBoxItem Content="{T:TranslateExtension LabelRotateNone}" />
                                <ComboBoxItem Content="{T:TranslateExtension LabelRotate90}" />
                                <ComboBoxItem Content="{T:TranslateExtension LabelRotate180}" />
                                <ComboBoxItem Content="{T:TranslateExtension LabelRotate270}" />
                                <ComboBoxItem Content="{T:TranslateExtension LabelAutoRotate}" />
                            </ComboBox>

                        </Grid>
                    </Expander.Content>
                </Expander>
                <Expander Header="{T:TranslateExtension LabelLuminosity}" BorderThickness="1"  BorderBrush="Black"  Margin="3" IsExpanded="True">
                    <Expander.Content>
                        <Grid Height="75" >
                            <Border BorderThickness="1" BorderBrush="Black" Background="White" HorizontalAlignment="Stretch">
                                <Polygon Points="{Binding LuminanceHistogramPoints}" Stretch="Fill" Fill="Black" Opacity="0.8" />
                            </Border>
                            <CheckBox IsChecked="{Binding HighlightUnderExp}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="16"/>
                            <CheckBox VerticalAlignment="Top" HorizontalAlignment="Right" Width="16" IsChecked="{Binding HighlightOverExp}"/>
                        </Grid>
                    </Expander.Content>
                </Expander>
                <Expander Header="{T:TranslateExtension LabelMotionDetection}" BorderThickness="1"  BorderBrush="Black"  Margin="3">
                    <Expander.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="88*" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="90*" />
                                <ColumnDefinition Width="5" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="186*" />
                            </Grid.RowDefinitions>
                            <CheckBox Content="{T:TranslateExtension LabelActivateMotionDetection}" Grid.Column="1" IsChecked="{Binding DetectMotion}" Grid.ColumnSpan="3" Margin="3" VerticalAlignment="Center"/>
                            <CheckBox Content="{T:TranslateExtension LabelCaptureWhenMove}" Grid.Column="1" Grid.Row="2" IsChecked="{Binding TriggerOnMotion}" Grid.ColumnSpan="3" Margin="3"  VerticalAlignment="Center"/>
                            <CheckBox Content="{T:TranslateExtension LabelAutofocusBeforeCapture}" Grid.Column="1" Grid.Row="1" IsChecked="{Binding MotionAutofocusBeforCapture}" Grid.ColumnSpan="3" Margin="3"  VerticalAlignment="Center"/>

                            <Label Content="{T:TranslateExtension LabelThreshold}" Grid.Column="1" Grid.Row="3" />
                            <Controls:NumericUpDown Grid.Column="3" Grid.Row="3" Maximum="99" Minimum="1" Value="{Binding MotionThreshold}" Margin="3"/>
                            <Label Content="{T:TranslateExtension LabelWaitMoion}" Grid.Column="1" Grid.Row="4" />
                            <Controls:NumericUpDown Grid.Column="3" Grid.Row="4" Margin="3" Minimum="1" Maximum="3600" Value="{Binding WaitForMotionSec}"/>
                            <Label Grid.Column="3" Grid.Row="5" Content="{Binding CurrentMotionIndex}" />
                        </Grid>
                    </Expander.Content>
                </Expander>
            </StackPanel>
        </ScrollViewer>
        <ToggleButton Content="{T:TranslateExtension ButtonFreezeImage}" Height="23" Margin="12,65,9,0" VerticalAlignment="Top" IsChecked="{Binding FreezeImage}" Checked="ToggleButton_Checked" Grid.Row="1"
                      Grid.Column="0" />
        <Button Content="{Binding RecButtonText}" Height="23" Margin="12,33,9,0" Command="{Binding RecordMovieCommand}" VerticalAlignment="Top" Grid.Row="1"
                Grid.Column="0" />
        <Image Height="104" Margin="10,96,0,0" VerticalAlignment="Top" Source="{Binding Preview}" Name="_previeImage" MouseDown="canvas_image_MouseDown" HorizontalAlignment="Left" Width="150" Grid.Row="1" Stretch="Uniform"
                Grid.Column="0">
            <!--<Controls:ProgressRing IsActive="{Binding Path=SelectedPortableDevice.IsBusy, RelativeSource={RelativeSource FindAncestor, AncestorType=my:LiveViewWnd, AncestorLevel=1}}" Height="78" Width="81" Canvas.Left="21" Canvas.Top="20" />-->
        </Image>
        <!--<Image Name="img_preview" Margin="31,114,0,0" Height="{Binding ElementName=canvas_image, Path=Height}" HorizontalAlignment="Left" Width="{Binding ElementName=canvas_image, Path=Width}"/>-->
        <Label Content="{Binding Fps}" Margin="188,96,9,72" Grid.Row="1" Grid.Column="0" />
        
        <Grid Margin="92,0,83,0" Grid.Column="2" Grid.Row="2" Name="grid_wait" Visibility="Hidden">
            <ProgressBar IsIndeterminate="True" Height="20"/>
            <Label Content="{T:TranslateExtension LabelWaitingForDevice}" HorizontalContentAlignment="Center" />
        </Grid>
        <Label Content="{Binding Source={x:Static Member=Devices:StaticHelper.Instance}, Path=SystemMessage}" FontWeight="Bold" HorizontalContentAlignment="Right" Grid.Row="4" Grid.Column="1" Padding="0" Grid.ColumnSpan="3" />
        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="0" Grid.RowSpan="5" />
    </Grid>
</Controls:MetroWindow>
